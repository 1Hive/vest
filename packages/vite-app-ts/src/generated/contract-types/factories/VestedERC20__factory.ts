/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VestedERC20, VestedERC20Interface } from "../VestedERC20";

const _abi = [
  {
    inputs: [],
    name: "Error_Wrap_AmountTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "Error_Wrap_VestOver",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "redeemedAmount",
        type: "uint256",
      },
    ],
    name: "Redeem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wrappedAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "underlyingAmount",
        type: "uint256",
      },
    ],
    name: "Wrap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimedUnderlyingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "endTimestamp",
    outputs: [
      {
        internalType: "uint64",
        name: "_endTimestamp",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "getRedeemableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "redeemedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint64",
        name: "_startTimestamp",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "underlyingAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "wrap",
    outputs: [
      {
        internalType: "uint256",
        name: "wrappedTokenAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d23806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636f307dc311610097578063a85adeab11610066578063a85adeab1461022b578063a9059cbb1461024c578063dd62ed3e1461025f578063e6fd48bc1461028a57600080fd5b80636f307dc3146101d057806370a08231146101f057806395a2251f1461021057806395d89b411461022357600080fd5b806318160ddd116100d357806318160ddd1461018757806323b872dd14610190578063313ce567146101a3578063619cfc35146101bd57600080fd5b806306fdde0314610105578063095ea7b3146101235780630daf3df01461014657806313bac82014610174575b600080fd5b61010d610292565b60405161011a9190610b1f565b60405180910390f35b610136610131366004610b90565b6102c6565b604051901515815260200161011a565b610166610154366004610bba565b60036020526000908152604090205481565b60405190815260200161011a565b610166610182366004610bd5565b610333565b61016660005481565b61013661019e366004610c01565b61049f565b6101ab6105fb565b60405160ff909116815260200161011a565b6101666101cb366004610bba565b610613565b6101d8610637565b6040516001600160a01b03909116815260200161011a565b6101666101fe366004610bba565b60016020526000908152604090205481565b61016661021e366004610bba565b61064f565b61010d6106f5565b61023361071a565b60405167ffffffffffffffff909116815260200161011a565b61013661025a366004610b90565b610732565b61016661026d366004610c3d565b600260209081526000928352604080842090915290825290205481565b610233610811565b6060600061029e610829565b60408051823560208201819052929350015b6040516020818303038152906040529250505090565b3360008181526002602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103219086815260200190565b60405180910390a35060015b92915050565b60008061033e610811565b67ffffffffffffffff169050600061035461071a565b67ffffffffffffffff16905080421061038057604051634bb83d4360e01b815260040160405180910390fd5b61038a8282610c7d565b61039690600019610c94565b85106103b5576040516303642f3d60e51b815260040160405180910390fd5b814210610423576103c64282610c7d565b6103d08383610c7d565b6103da9087610cb6565b6103e49190610c94565b92506103f08584610c7d565b6001600160a01b03851660009081526003602052604081208054909190610418908490610cd5565b909155506104279050565b8492505b610431848461083a565b600061043b610637565b90506104526001600160a01b0382163330896108a4565b60408051858152602081018890526001600160a01b038716917f18a5ed48bb0a697c64a5aef8f28cec1f29ab01da27a45c5f835099781ef1ea46910160405180910390a250505092915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001981146104fb576104d68382610c7d565b6001600160a01b03861660009081526002602090815260408083203384529091529020555b6001600160a01b03851660009081526001602090815260408083205460039092529091205461052a8583610c7d565b6001600160a01b03808916600090815260016020526040808220939093559088168152908120805487019055610561828785610933565b9050801561059e576105738183610c7d565b6001600160a01b03808a16600090815260036020526040808220939093559089168152208054820190555b866001600160a01b0316886001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef886040516105e391815260200190565b60405180910390a360019450505050505b9392505050565b600080610606610829565b6040013560f81c92915050565b6001600160a01b03811660009081526003602052604081205461032d9083906109e2565b600080610642610829565b6041013560601c92915050565b33600081815260036020526040812054909161066b90826109e2565b91506106778282610cd5565b3360009081526003602052604090205581156106ef576000610697610637565b90506106ad6001600160a01b0382168585610aa1565b6040518381526001600160a01b0385169033907fd12200efa34901b99367694174c3b0d32c99585fdf37c7c26892136ddd0836d99060200160405180910390a3505b50919050565b60606000610701610829565b60408051602080840135908201819052929350016102b0565b600080610725610829565b605d013560c01c92915050565b3360009081526001602090815260408083205460039092528220546107578483610c7d565b33600090815260016020526040808220929092556001600160a01b038716815290812080548601905561078b828685610933565b905080156107c55761079d8183610c7d565b33600090815260036020526040808220929092556001600160a01b0388168152208054820190555b6040518581526001600160a01b0387169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350600195945050505050565b60008061081c610829565b6055013560c01c92915050565b600119368181013560f01c90030190565b8060008082825461084b9190610cd5565b90915550506001600160a01b0382166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061092c5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064015b60405180910390fd5b5050505050565b60008080600019858709858702925082811083820303915050806000141561096d576000841161096257600080fd5b5082900490506105f4565b80841161097957600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806109ed610811565b67ffffffffffffffff1690506000610a0361071a565b67ffffffffffffffff169050814211610a215760009250505061032d565b804210610a55576001600160a01b038516600090815260016020526040902054610a4c908590610c7d565b9250505061032d565b83610a608383610c7d565b610a6a8442610c7d565b6001600160a01b038816600090815260016020526040902054610a8d9190610cb6565b610a979190610c94565b610a4c9190610c7d565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610b195760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610923565b50505050565b600060208083528351808285015260005b81811015610b4c57858101830151858201604001528201610b30565b81811115610b5e576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b8b57600080fd5b919050565b60008060408385031215610ba357600080fd5b610bac83610b74565b946020939093013593505050565b600060208284031215610bcc57600080fd5b6105f482610b74565b60008060408385031215610be857600080fd5b82359150610bf860208401610b74565b90509250929050565b600080600060608486031215610c1657600080fd5b610c1f84610b74565b9250610c2d60208501610b74565b9150604084013590509250925092565b60008060408385031215610c5057600080fd5b610c5983610b74565b9150610bf860208401610b74565b634e487b7160e01b600052601160045260246000fd5b600082821015610c8f57610c8f610c67565b500390565b600082610cb157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610cd057610cd0610c67565b500290565b60008219821115610ce857610ce8610c67565b50019056fea264697066735822122053e5773e84b7e160c3c9b8bd4c70505964da700889e27e866f0df56ff471634c64736f6c634300080b0033";

type VestedERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestedERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VestedERC20__factory extends ContractFactory {
  constructor(...args: VestedERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "VestedERC20";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VestedERC20> {
    return super.deploy(overrides || {}) as Promise<VestedERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VestedERC20 {
    return super.attach(address) as VestedERC20;
  }
  connect(signer: Signer): VestedERC20__factory {
    return super.connect(signer) as VestedERC20__factory;
  }
  static readonly contractName: "VestedERC20";
  public readonly contractName: "VestedERC20";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestedERC20Interface {
    return new utils.Interface(_abi) as VestedERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VestedERC20 {
    return new Contract(address, _abi, signerOrProvider) as VestedERC20;
  }
}
